name: build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_test:
    name: build and test ${{ matrix.py }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO windows-2019
        os: [ubuntu-20.04, macos-10.15]
        # asdf poetry not working 3.10
        py: [3.8.12, 3.9.8]

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: 'recursive'

      # sqlite for coverage
      # llvm for shap
    - name: Install linux system deps
      if:  ${{ matrix.os == 'ubuntu-20.04' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y libsqlite3-dev llvm

    - name: Install macos system deps
      if:  ${{ matrix.os == 'macos-10.15' }}
      run: |
        brew update
        brew install llvm@9

    - name: Install asdf
      uses: asdf-vm/actions/setup@v1.0.1

    - name: Install asdf plugins
      run: |
        asdf plugin add python
        asdf plugin add poetry

    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v1
      with:
        path: ~/.asdf
        key: v8-${{ runner.os }}-${{ matrix.py }}-asdf-${{ hashFiles(format('{0}{1}', github.workspace, '/poetry.lock')) }}
        restore-keys: |
          v8-${{ runner.os }}-${{ matrix.py }}-asdf-

    - name: Install python
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        asdf install python ${{ matrix.py }}

    - name: Set python
      run: |
        asdf local python ${{ matrix.py }}

    - name: Install tools
      run: |
        asdf install
        poetry config virtualenvs.create false
        poetry run pip install -U pip setuptools wheel

    - name: Build
      run: |
        poetry run pip install cython oldest-supported-numpy
        poetry run python buildpre.py
        poetry run python build.py build_ext --inplace --force

    - name: Install deps
      run: |
        poetry install --no-root

    - name: Format
      run: |
        poetry run isort --check .
        poetry run black --check .

    - name: Test
      run: |
        poetry run pytest tests/
